@model DocumentVm;
@{
    ViewData["Title"] = "Documents";
 
}
<div class="card">
    <h5 class="card-title" id="tableTitle">@ViewData["card-title"]</h5>
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <table class="selectionTable table table-striped table-bordered" style="width:100%" id="dataTable">
                    <thead>
                    <tr class="bg-dark text-white ps-2">
                    <th class="ps-3">Id</th>
                    <th class="ps-3">Department</th>
                    <th class="ps-3">TrackingCode</th>
                    <th class="ps-3">Title</th>
                    <th class="ps-3">Content</th>
                    <th class="ps-3">Request Type</th>
                    <th class="ps-3">Remarks</th>
                    <th class="ps-3">CreatedDate</th>
                    <th class="ps-3">Action</th>
                    </thead>
                </table>
            </div>
        </div>
        <div class="custom-buttons">
            <button class="btn btn-primary" data-toggle="modal" data-target="#modalNewDocument" id = "btnNewDocument">
                <i class="bi bi-file-earmark-plus"></i>
                New Document
            </button>
            <button class="btn btn-success" id = "btnRefreshDataTable">
                <i class="bi bi-arrow-repeat"></i>
                Refresh
            </button>
        </div>
    </div>
</div>

<!-- Modal for new documents -->
<div class="modal fade" id="modalNewDocument" tabindex="-1" role="dialog" aria-labelledby="modalNewDocumentLabel" aria-hidden="true" >
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalNewDocumentLabel">New Document</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <label for="message-text" class="col-form-label">Tracking Code:</label>
                    <strong id = 'trackingCode'></strong>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Title:</label>
                        <input type="text" class="form-control" id="title" >
                        <p class="errorFieldText" id = 'errorFieldTitle' data-errorfield = "title"></p>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Content:</label>
                        <textarea cols="30" rows="2" class="form-control" style="height: 50px;" id = "content"  ></textarea>
                        <p class="errorFieldText" id = 'errorFieldContent' data-errorfield = "content"></p>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Request Type:</label>
                        <select asp-for="@Model.RequestTypeId" asp-items="@Model.RequestTypes" class="form-select" style="font-size: 12px !important;" id="requestTypeId" >
                            <option value="">----Select Request Type----</option>
                        </select>
                        <p class="errorFieldText" id = 'errorFieldRequestTypeId' data-errorfield = "requestTypeId"></p>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Routing Department:</label>
                        <select id="routeDepartmentId" asp-for="@Model.RouteDepartmentId" asp-items="@Model.Departments" class="form-select" style="font-size: 12px !important;">
                            <option value="">----Select Routing Department----</option>
                        </select>
                        <p class="errorFieldText" id = 'errorFieldRouteDepartmentId' data-errorfield = "routeDepartmentId"></p>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Remarks:</label>
                        <textarea cols="30" rows="2" class="form-control" style="height: 50px;" id ="remarks"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id = "closeModal">Close</button>
                <button type="button" class="btn btn-primary" id = 'btnSaveChangesDocument'>Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for update documents -->
<div class="modal fade" id="modalUpdateDocument" tabindex="-1" role="dialog" aria-labelledby="modalUpdateDocumentLabel" aria-hidden="true" >
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalUpdateDocumentLabel">Update Document</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id = "updateCloseModalIcon">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
          <form>
               <input type="hidden" class="id form-control" id="updateId"   >
              <label for="message-text" class="col-form-label">Tracking Code:</label>
              <strong id='updateTrackingCode'></strong>
              <div class="form-group">
                  <label for="recipient-name" class="col-form-label">Title:</label>
                  <input type="text" class="title form-control" id="updateTitle">
                  <p class="errorFieldText" id='errorUpdateFieldTitle' data-errorfield="title"></p>
              </div>
              <div class="form-group">
                  <label for="message-text" class="col-form-label">Content:</label>
                  <textarea cols="30" rows="2" class="content form-control" style="height: 50px;" id = "updateContent"  ></textarea>
                  <p class="errorFieldText" id='errorUpdateFieldContent' data-errorfield="content"></p>
              </div>
              <div class="form-group">
                  <label for="message-text" class="col-form-label">Request Type:</label>
                  <select asp-for="@Model.RequestTypeId" asp-items="@Model.RequestTypes" class="requestTypeId form-select" style="font-size: 12px !important;" id="updateRequestTypeId">
                      <option value="">----Select Request Type----</option>
                  </select>
                  <p class="errorFieldText" id='errorUpdateFieldRequestTypeId' data-errorfield="requestTypeId"></p>
              </div>
              <div class="form-group">
                  <label for="message-text" class="col-form-label">Routing Department:</label>
                  <select id="updateRouteDepartmentId" asp-for="@Model.DepartmentId" asp-items="@Model.Departments" class="departmentId form-select" style="font-size: 12px !important;">
                      <option value="">----Select Routing Department----</option>
                  </select>
                  <p class="errorFieldText" id='errorUpdateFieldRouteDepartmentId' data-errorfield="routeDepartmentId"></p>
              </div>
              <div class="form-group">
                  <label for="message-text" class="col-form-label">Remarks:</label>
                  <textarea cols="30" rows="2" class="remarks form-control" style="height: 50px;" id ="updateRemarks"></textarea>
              </div>
          </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" id = "updateCloseModalButton">Close</button>
        <button type="button" class="btn btn-primary" id = 'btnUpdateSaveChangesDocument'>Save Changes</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="modalPrintDocument" tabindex="-1" role="dialog" aria-labelledby="modalPrintDocumentLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Print Document</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id = "iconClosePrintDocument">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id = "modalPrintDocumentBody">
          
                <div class="d-flex justify-content-center mb-4">
                    <div id="qrcode"></div>
                </div>
                <div>
                    <label for="message-text" class="col-form-label">Tracking Code:</label>
                    <strong id='printDocumentTrackingCode'></strong>
                </div>
                <div>
                    <label for="message-text" class="col-form-label">Department:</label>
                    <strong id='printDocumentDepartmentName'></strong>
                </div>
                <div>
                    <label for="message-text" class="col-form-label">Title:</label>
                    <strong id='printDocumentTitle'></strong>
                </div>
                <div>
                    <label for="message-text" class="col-form-label">Content:</label>
                    <strong id='printDocumentContent'></strong>
                </div>
                <div>
                    <label for="message-text" class="col-form-label">Request Type:</label>
                    <strong id='printDocumentRequestTypeTitle'></strong>
                </div>
                <div>
                    <label for="message-text" class="col-form-label">Remarks:</label>
                    <strong id='printDocumentRemarks'></strong>
                </div>
           
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id = "btnClosePrintDocument">Close</button>
                <button type="button" class="btn btn-primary" id = "btnPrintDocument">Print</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="completeModal" tabindex="-1" role="dialog" aria-labelledby="completeModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="completeModalLongTitle">Completed Document</h5>
            </div>
            <div class="modal-body">
                <p>Would you consider this as a completed document?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id = "btnCloseModal">Close</button>
                <button type="button" class="btn btn-primary" id="btnCompleteDocument">Complete</button>
                <input type="hidden" id = "documentId" >
            </div>
        </div>
    </div>
</div>
<input type="hidden"  id = "employeeId" value="@ViewData["employeeId"]" >
@section Scripts
{
    <script type="text/javascript">
         
        let clientErrors = []
        let trackingCode = "";                  
        loadDataTable(documentColumns)
        
        $('.errorFieldText').css({'color': '#a83240', 'font-size': '10px'})               
       
        $(document).ready(function() {   
        
        let customButtons = `
                        <div class="custom-buttons">
                                   <button class="btn btn-primary" data-toggle="modal" data-target="#modalNewDocument" id = "btnNewDocument">
                                       <i class="bi bi-file-earmark-plus"></i>
                                       New Document
                                   </button>
                                   <button class="btn btn-success" id = "btnRefreshDataTable">
                                       <i class="bi bi-arrow-repeat"></i>
                                       Refresh
                                   </button>
                               </div>
                     
                     `
                     
      document.addEventListener('click', function(event) {                 
                     if (event.target && event.target.id === 'btnRefreshDataTable') {                     
                         alert('refreshed')
                         dataTable.destroy();
                         dataTable.ajax.reload();
                         loadDataTable(documentColumns);
                         document.querySelector('.dataTables_wrapper .dataTables_filter').insertAdjacentHTML('beforeend', customButtons)
                     }
                 });
             
         function refreshDatatable(){
              
             dataTable.destroy();
             dataTable.ajax.reload();
             loadDataTable(documentColumns)
            
             document.querySelector('.dataTables_wrapper .dataTables_filter').insertAdjacentHTML('beforeend', customButtons)
         }
          
        function saveChanges(inputObject, requestMethod, url, titleChanges, message){
            
                          let validateTitle = validateInput('Title', inputObject.title, 2, 50);
                          let validateContent = validateInput('Content', inputObject.content, 2, 400);
                        
                          let validateRouteDepartmentId = validateSelect('Routing Department', inputObject.routeDepartmentId);
                          let validateRequestTypeid = validateSelect('Request Type', inputObject.requestTypeId);
                         
                          $('.errorFieldText').text('')
                          
                          displayValidationError('#errorFieldTitle', validateTitle)
                          displayValidationError('#errorFieldContent', validateContent)
              
                          displayValidationError('#errorFieldRequestTypeId', validateRequestTypeid)
                           displayValidationError('#errorFieldRouteDepartmentId', validateRouteDepartmentId)

                           displayValidationError('#errorUpdateFieldTitle', validateTitle)
                            displayValidationError('#errorUpdateFieldContent', validateContent)
             
                            displayValidationError('#errorUpdateFieldRequestTypeId', validateRequestTypeid)
                           displayValidationError('#errorUpdateFieldRouteDepartmentId', validateRouteDepartmentId)
                           
                          if (clientErrors.length < 1){                  
                              $.ajax({
                                   url: url,
                                   type: requestMethod,
                                   contentType: 'application/json', 
                                   data: JSON.stringify(inputObject),
                                   success: function(response) {                                  
                                      $('#title').val('');
                                      $('#content').val('');
                                      $('#remarks').val('');
                                      $('#departmentId').prop('selectedIndex', 0);
                                      $('#requestTypeId').prop('selectedIndex', 0);
                                      
                                      $('#closeModal').click();
                                      $('#modalUpdateDocument').modal('hide');
                                       
                                      refreshDatatable();
                                       
                                      pushNotify('New Document', message, 'success');                               
                                   },
                                   error: function(xhr, status, error) {                           
                                   let serverErrors = xhr.responseJSON.errors;
                                   console.log(xhr)
                                   let transformedObjects = [];
                                    
                                    serverErrors.forEach(function(error) {                                   
                                        let transformedObject = {};
                                        transformedObject[error.field.charAt(0).toLowerCase() + error.field.slice(1)] = error.error;
                                        transformedObjects.push(transformedObject);
                                    });
                                           
                                 $('.errorFieldText').each(function() {
                                     let errorField = $(this).data('errorfield');
                                     
                                     switch (errorField) {
                                         case 'requestTypeId':                        
                                             checkIfPropertyExistsThenGetValue(transformedObjects, 'requestTypeId', function(errorRequestTypeId) {                            
                                                 if (errorRequestTypeId !== null){
                                                     $(this).text(errorRequestTypeId);
                                                 }                             
                                             }.bind(this)); 
                                             break;
                                         case 'departmentId':
                                             checkIfPropertyExistsThenGetValue(transformedObjects, 'departmentId', function(errorDepartmentId) {
                                               if (errorDepartmentId !== null){
                                                   $(this).text(errorDepartmentId);
                                               }
                                             }.bind(this));
                                             break;
                                         case 'content':
                                             checkIfPropertyExistsThenGetValue(transformedObjects, 'content', function(errorContent) {
                                                  if (errorContent !== null){
                                                       $(this).text(errorContent);
                                                   }
                                             }.bind(this));
                                             break;
                                         case 'title':
                                             checkIfPropertyExistsThenGetValue(transformedObjects, 'title', function(errorTitle) {
                                                 if (errorTitle !== null){
                                                  $(this).text(errorTitle);
                                                 }
                                             }.bind(this));
                                             break;
                                         default:                         
                                             break;
                                     }
                                         });
                                                   pushNotify(titleChanges, 'Failed to create document', 'error');
                                                       
                                                 }
                                               });
                                          }                 
                                          clientErrors = [];                                 
        }
        
          $('#updateCloseModalIcon, #updateCloseModalButton' ).click(function() {
                $('#modalUpdateDocument').modal('hide');
            });
         
           $('#btnClosePrintDocument, #iconClosePrintDocument').click(function() {
                 $('#modalPrintDocument').modal('hide');
             });
         
         $('#btnRefreshDataTable').click(function (e){
             refreshDatatable();
         })
         
         $('#btnPrintDocument').click(function (e) {
             
                  
                   window.print();
                
         });
         
         $('#btnNewDocument').click(function() {
                        clearErrorMessages();
                       trackingCode = generateTrackingCode();
                       $('#trackingCode').text(trackingCode);      
                       $('#trackingCode').css({'font-family': '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif', 'font-size': '14px'});
                       
                  });
          
        $('#btnSaveChangesDocument').on('click', function (e){                   
                                 // let departmentId = parseInt($('#departmentId').val());
                                  let requestTypeId = parseInt($('#requestTypeId').val());
                                  let title =  $('#title').val();
                                  let content =  $('#content').val();
                                  let remarks =  $('#remarks').val();
                                  let routeDepartmentId = $('#routeDepartmentId').val();
                                                          
                                  
                           let data = {                               
                                   requestTypeId,
                                   title,
                                   content,
                                   remarks,
                                   trackingCode,
                                   routeDepartmentId                                    
                               }                          
                                                          
                               saveChanges(data, 'post', '/user/document/createDocument', 'New Document',  'Successfully created document');
                            });
         
          $('#btnUpdateSaveChangesDocument').on('click', function (e){         
                    e.preventDefault();
                     e.stopPropagation(); 
    
                                          let documentId = parseInt($('#updateId').val());
                                           // let departmentId = parseInt($('#updateDepartmentId').val());
                                        let requestTypeId = parseInt($('#updateRequestTypeId').val());
                                        let title =  $('#updateTitle').val();
                                        let content =  $('#updateContent').val();
                                        let remarks =  $('#updateRemarks').val();
                                         let trackingCode =  $('#updateTrackingCode').text();
                                          let routeDepartmentId =  $('#updateRouteDepartmentId').val();
                                         
                                         
                                           let data = {
                                                                      
                                                                             requestTypeId,
                                                                             title,
                                                                             content,
                                                                             remarks,
                                                                             trackingCode,
                                                                             id : documentId,
                                                                             routeDepartmentId
                                                                              
                                                                         }       
                                                                         
                                                                         console.log(data)
                                        saveChanges(data,'put', '/user/document/UpdateDocument',  'Update Document', 'Successfully updated document');
                                     });
          
                    $('#btnCompleteDocument').click(function (){
                           let employeeId = $('#employeeId').val();
                                           let documentId = $('#documentId').val();
                                             
                                             $.ajax({
                                                     url: '/user/documentstatus/UpdateDocumentToComplete',
                                                     type: 'PUT',
                                                      contentType: 'application/json', 
                                                      data: JSON.stringify({
                                                           employeeId,
                                                           documentId
                                                      }),
                                                     success: function(response) {
                                                         refreshDatatable();       
                                                         $('#completeModal').modal("hide");
                                                     },
                                                     error: function(xhr, status, error) {
                                             
                                                          
                                                     }
                                                 });
                        })
        
            });   
        
         
        $('.custom-buttons').appendTo('.dataTables_wrapper .dataTables_filter:eq(0)');
             
    </script>
}
